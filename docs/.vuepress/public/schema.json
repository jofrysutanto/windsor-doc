{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "name": "Package",
  "type": "object",
  "additionalProperties": true,
  "required": [
    "fields"
  ],
  "defaultSnippets": [
    {
      "label": "New Field Group",
      "description": "Creates new field group",
      "body": "title: '${1:My Field Group}'\nkey: '${2:field_key}'\nposition: 'acf_after_title'\nhide_on_screen: []\nlocation:\n\t-\n\t\t-\n\t\t\tparam: '${3:post_type}'\n\t\t\toperator: '=='\n\t\t\tvalue: '${4:post}'\nfields: ${0:[]}"
    }
  ],
  "definitions": {
    "fields": {
      "type": [
        "object",
        "array"
      ],
      "defaultSnippets": [
        {
          "label": "Field: Default Text Field",
          "description": "Simple text input field",
          "body": "${1:my_field}:\n\ttype: text\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n${0}"
        },
        {
          "label": "Field: Text Area Field",
          "description": "New Textarea field",
          "body": "${1:my_field}:\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\ttype: 'textarea'\n\tnew_lines: ${2|'wpautop','br',''|}\n\trows: 4\n${0}"
        },
        {
          "label": "Field: Number Field",
          "description": "New number field",
          "body": "${1:my_field}:\n\ttype: number\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n${0}"
        },
        {
          "label": "Field: Range Field",
          "description": "New range slider field",
          "body": "${1:my_field}:\n\ttype: range\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\tmin: 0\n\tmax: 10\n\tstep: 1\n${0}"
        },
        {
          "label": "Field: Email Field",
          "description": "Email input field",
          "body": "${1:my_field}:\n\ttype: email\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n${0}"
        },
        {
          "label": "Field: URL Field",
          "description": "URL input field",
          "body": "${1:my_field}:\n\ttype: url\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n${0}"
        },
        {
          "label": "Field: Image Field",
          "description": "Image upload/selection field",
          "body": "${1:my_field}:\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\ttype: \"image\"\n\tpreview_size: '${4|thumbnail,medium,large,full|}'\n\tmax_size: 5 # in MB\n\tmax_width: 2000 # in px\n\tmax_height: 2000 # in px\n${0}"
        },
        {
          "label": "Field: File Field",
          "description": "File upload/selection field",
          "body": "${1:my_field}:\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\ttype: \"file\"\n\treturn_format: '${2|array,url,id|}'\n\tmax_size: 5\n\tmime_types: '' # Allowed mime types \n${0}"
        },
        {
          "label": "Field: WYSIWYG / Rich Content Editor",
          "description": "TinyMCE rich content editing field",
          "body": "${1:my_field}:\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\ttype: \"wysiwyg\"\n\ttabs: 'all'\n\ttoolbar: 'basic'\n\tmedia_upload: true\n\tdelay: true\n\t${0}"
        },
        {
          "label": "Field: Gallery Field",
          "description": "Gallery upload/selection field",
          "body": "${1:my_field}:\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\ttype: \"gallery\"\n\tmin: 0\n\tmax: 0\n\tinsert: 'append'\n\tlibrary: 'all'\n${0}"
        },
        {
          "label": "Field: Select Dropdown",
          "description": "Allow user to select one or more values from dropdown",
          "body": "${1:my_field}:\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\ttype: \"select\"\n\tui: true\n\tchoices:\n\t\t${2:value}: ${3:'Label'}\n\t\t${0}"
        },
        {
          "label": "Field: Checkboxes",
          "description": "Allow user to select one or more values from checkboxes",
          "body": "${1:my_field}:\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\ttype: \"checkbox\"\n\tlayout: horizontal\n\treturn_format: value\n\tchoices:\n\t\t${2:value}: ${3:'Label'}\n\t\t${0}"
        },
        {
          "label": "Field: Radio Buttons",
          "description": "Allow user to select one value from radio buttons",
          "body": "${1:my_field}:\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\ttype: \"radio\"\n\tlayout: horizontal\n\treturn_format: value\n\tchoices:\n\t\t${2:value}: ${3:'Label'}\n\t\t${0}"
        },
        {
          "label": "Field: Button Group",
          "description": "Allow user to select one value from button group",
          "body": "${1:my_field}:\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\ttype: \"button_group\"\n\tlayout: horizontal\n\treturn_format: value\n\tchoices:\n\t\t${2:value}: ${3:'Label'}\n\t\t${0}"
        },
        {
          "label": "Field: Boolean — True or False Toggle",
          "description": "Checkbox or switch toggle",
          "body": "${1:my_field}:\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\ttype: \"true_false\"\n\tui: true\n\tdefault: ${2|true,false|}\n${0}"
        },
        {
          "label": "Field: Link Field",
          "description": "Allow selection or creation of link object",
          "body": "${1:my_field}:\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\ttype: \"link\"\n\treturn_format: \"array\"\n${0}"
        },
        {
          "label": "Field: Post Object Field",
          "description": "Allow user to pick from post(s) from existing post types",
          "body": "${1:my_field}:\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\ttype: \"post_object\"\n\treturn_format: '${2|object,array|}'\n\tpost_type: []\n\ttaxonomy: [] # e.g. category:art\n\tmultiple: false\n${0}"
        },
        {
          "label": "Field: Page Link Field",
          "description": "Allow user to get URL from post(s) from existing post types",
          "body": "${1:my_field}:\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\ttype: \"page_link\"\n\tpost_type: []\n\ttaxonomy: [] # e.g. category:art\n\tallow_archives: false\n\tmultiple: false\n${0}"
        },
        {
          "label": "Field: Relationship Field",
          "description": "Allow user to pick multiple posts in expanded search table.",
          "body": "${1:my_field}:\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\ttype: \"relationship\"\n\tpost_type:\n\t\t- ${2:'post'}\n\tfilters:\n\t\t- 'search'\n\t\t- 'post_type'\n\t\t- 'taxonomy'\n\telements:\n\t\t- 'featured_image'\n\tmin: 0\n\tmax: 0\n\treturn_format: 'object'\n${0}"
        },
        {
          "label": "Field: Taxonomy Field",
          "description": "Allow user to pick from available taxonomies",
          "body": "${1:my_field}:\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\ttype: taxonomy\n\ttaxonomy: ${2:my_tax}\n\tfield_type: ${3|'multi_select','checkbox','radio','select'|}\n\tallow_null: false\n\tadd_term: false\n\tsave_terms: false\n\tload_terms: false\n\treturn_format: ${4|'object','id'|}\n${0}"
        },
        {
          "label": "Field: User Field",
          "description": "Allow selection of existing user.",
          "body": "${1:my_field}:\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\ttype: user\n\trole: ${2:[]}\n\treturn_format: ${3|'array','object','id'|}\n${0}"
        },
        {
          "label": "Field: Google Map Field",
          "description": "Renders google map",
          "body": "${1:my_field}:\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\ttype: \"google_map\"\n\tcenter_lat: '-37.854496'\n\tcenter_lng: '144.9902323'\n\tzoom: 14\n\theight: 400\n${0}"
        },
        {
          "label": "Field: Date Picker Field",
          "description": "Renders date picker widget",
          "body": "${1:my_field}:\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\ttype: \"date_picker\"\n\tdisplay_format: \"d/m/Y\"\n\treturn_format: \"d/m/Y\"\n${0}"
        },
        {
          "label": "Field: Date & Time Picker Field",
          "description": "Renders date and time picker widget",
          "body": "${1:my_field}:\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\ttype: \"date_time_picker\"\n\tdisplay_format: \"d/m/Y g:i a\"\n\treturn_format: \"d/m/Y g:i a\"\n${0}"
        },
        {
          "label": "Field: Time Picker Field",
          "description": "Renders time picker widget",
          "body": "${1:my_field}:\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\ttype: \"time_picker\"\n\tdisplay_format: \"g:i a\"\n\treturn_format: \"g:i a\"\n${0}"
        },
        {
          "label": "Field: Color Picker Field",
          "description": "Renders color picker widget",
          "body": "${1:my_field}:\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\ttype: \"color_picker\"\n\tdefault_value: \"#FFFFFF\"\n${0}"
        },
        {
          "label": "Layout: Message",
          "description": "Show instructional message",
          "body": "${1:my_field}:\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\ttype: 'message'\n\tmessage: ${2:Your message}\n\tesc_html: ${3|true,false|}\n${0}"
        },
        {
          "label": "Layout: Accordion",
          "description": "Organize fields into collapsible accordion.",
          "body": "${1:my_field}:\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\ttype: \"accordion\"\n\tmulti_expand: true\n\topen: false\n\tendpoint: false\n${0}"
        },
        {
          "label": "Layout: Tab",
          "description": "Organize fields into tabs.",
          "body": "${1:my_field}_tab:\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\ttype: \"tab\"\n\tplacement: \"${2|top,left|}\"\n\tendpoint: false\n${0}"
        },
        {
          "label": "Layout: Group",
          "description": "Organize fields into a group.",
          "body": "${1:my_field}:\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\ttype: \"group\"\n\tlayout: \"${2|block,table,row|}\"\n\tsub_fields:\n\t\t${0}"
        },
        {
          "label": "Layout: Repeater",
          "description": "Create repeatable groups of fields",
          "body": "${1:my_field}:\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\ttype: \"repeater\"\n\tlayout: \"${2|block,table,row|}\"\n\tsub_fields:\n\t\t${0}"
        },
        {
          "label": "Layout: Flexible Content",
          "description": "Create multi-layout fields",
          "body": "${1:my_layout}:\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\ttype: \"flexible_content\"\n\tbutton_label: \"Add Row\"\n\tmin: 0\n\tmax: 0\n\tlayouts:\n\t\tlayout_1:\n\t\t\tdisplay: 'block'\n\t\t\tlabel: 'Layout 1'\n\t\t\tsub_fields:\n\t\t\t\tmy_field:\n\t\t\t\t\ttype: 'text'\n\t\t\t\t\tlabel: 'My Field'\n\t\t${0}"
        },
        {
          "label": "Layout: Clone",
          "description": "Create fields composed of existing custom fields.",
          "body": "${1:my_field}:\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\ttype: \"clone\"\n\tdisplay: \"${2|group,seamless|}\"\n\tprefix_label: false\n\tprefix_name: false\n\tclone:\n\t\t- \"${3:other_field}\"\n${0}"
        },
        {
          "label": "Layout: Blueprint",
          "description": "Copy fields from given blueprint",
          "body": "${1:my_field}:\n\tlabel: ${1/([a-z]*)_*([a-z]*)/${1:/capitalize} ${2:/capitalize}/g}\n\ttype: \"blueprint\"\n\tsource: \"${2|my-blueprint|}\"\n\tprefix: false\n\tprefix_label: false"
        }
      ],
      "additionalProperties": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of the field. e.g. 'text', 'textarea', etc."
          },
          "label": {
            "type": "string",
            "description": "Field label which will appear on the EDIT page"
          },
          "instructions": {
            "type": "string",
            "description": "Instructions for authors. Shown when submitting data."
          },
          "required": {
            "type": "boolean",
            "default": true
          },
          "wrapper": {
            "type": "object",
            "properties": {
              "width": {
                "type": "integer"
              },
              "class": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "conditional_logic": {
            "description": "Conditionally show this field based on sets of rules",
            "type": [
              "null",
              "array"
            ],
            "items": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "field": {
                    "type": "string",
                    "description": "Supply the key of the field you will be referring to."
                  },
                  "operator": {
                    "type": "string",
                    "description": "Choose logical operator used for comparison",
                    "examples": [
                      "'=='",
                      "'!='",
                      "'!=empty'",
                      "'==empty'",
                      "'==pattern'",
                      "'==contains'"
                    ]
                  },
                  "value": {
                    "type": [
                      "string",
                      "boolean"
                    ],
                    "description": "The value to be tested"
                  }
                }
              }
            }
          }
        },
        "defaultSnippets": [
          {
            "label": "Conditional Rule",
            "description": "Create conditional rule block",
            "body": "conditional_logic:\n\t-\n\t\t-\n\t\t\tfield: ${1:referred_field}\n\t\t\toperator: ${2|'==','!=','==pattern','==contains','!=empty','==empty'|}\n\t\t\tvalue: ${3:value}\n${0}"
          }
        ],
        "required": [
          "type",
          "label"
        ],
        "allOf": [
          {
            "if": {
              "properties": {
                "type": {
                  "const": "text"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_placeholder"
                },
                {
                  "$ref": "#/definitions/input_prepend_append"
                },
                {
                  "$ref": "#/definitions/input_default"
                },
                {
                  "properties": {
                    "maxlength": {
                      "type": "integer",
                      "description": "Character limit - omit this property for no limit"
                    }
                  }
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "textarea"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_placeholder"
                },
                {
                  "$ref": "#/definitions/input_prepend_append"
                },
                {
                  "$ref": "#/definitions/input_default"
                },
                {
                  "properties": {
                    "new_lines": {
                      "type": "string",
                      "description": "Controls how new lines are rendered",
                      "examples": [
                        "'wpautop'",
                        "'br'",
                        "''"
                      ]
                    },
                    "rows": {
                      "type": "integer",
                      "description": "Sets the textarea height"
                    }
                  }
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "number"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_placeholder"
                },
                {
                  "$ref": "#/definitions/input_prepend_append"
                },
                {
                  "$ref": "#/definitions/input_default"
                },
                {
                  "properties": {
                    "min": {
                      "type": "number",
                      "description": "Minimum value"
                    },
                    "max": {
                      "type": "number",
                      "description": "Maximum value"
                    }
                  }
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "range"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_placeholder"
                },
                {
                  "$ref": "#/definitions/input_prepend_append"
                },
                {
                  "$ref": "#/definitions/input_default"
                },
                {
                  "properties": {
                    "min": {
                      "type": "number",
                      "description": "Minimum value"
                    },
                    "max": {
                      "type": "number",
                      "description": "Maximum value"
                    },
                    "step": {
                      "type": "number",
                      "description": "Step Size"
                    }
                  }
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "email"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_placeholder"
                },
                {
                  "$ref": "#/definitions/input_prepend_append"
                },
                {
                  "$ref": "#/definitions/input_default"
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "url"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_placeholder"
                },
                {
                  "$ref": "#/definitions/input_default"
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "image"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_required"
                },
                {
                  "$ref": "#/definitions/file_default"
                },
                {
                  "$ref": "#/definitions/file_image"
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "file"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_required"
                },
                {
                  "$ref": "#/definitions/file_default"
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "wysiwyg"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_required"
                },
                {
                  "$ref": "#/definitions/input_default"
                },
                {
                  "properties": {
                    "tabs": {
                      "type": "string",
                      "examples": [
                        "'all'",
                        "'visual'",
                        "'text'"
                      ],
                      "description": "Available tabs on TinyMCE editor."
                    },
                    "toolbar": {
                      "type": "string",
                      "examples": [
                        "'full'",
                        "'basic'"
                      ],
                      "description": "Choose between 'basic' or 'full' content editing features"
                    },
                    "media_upload": {
                      "type": "boolean",
                      "description": "Whether or not to show media upload button"
                    },
                    "delay": {
                      "type": "boolean",
                      "description": "TinyMCE will not be initialized until field is clicked"
                    }
                  }
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "oembed"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_required"
                },
                {
                  "properties": {
                    "width": {
                      "type": "number",
                      "description": "Size in pixels"
                    },
                    "height": {
                      "type": "number",
                      "description": "Size in pixels"
                    }
                  }
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "gallery"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_required"
                },
                {
                  "$ref": "#/definitions/file_default"
                },
                {
                  "$ref": "#/definitions/file_image"
                },
                {
                  "properties": {
                    "insert": {
                      "type": "string",
                      "description": "Specify where new attachments are added.",
                      "examples": [
                        "prepend",
                        "append"
                      ]
                    },
                    "min": {
                      "type": "integer",
                      "description": "Minimum number of selection"
                    },
                    "max": {
                      "type": "integer",
                      "description": "Maximum number of selection"
                    }
                  }
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "select"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_required"
                },
                {
                  "$ref": "#/definitions/choices"
                },
                {
                  "properties": {
                    "default_value": {
                      "type": [
                        "string",
                        "array"
                      ],
                      "description": "Default value; if multiple values are allowed, you can provide array of default values."
                    },
                    "allow_null": {
                      "type": "boolean",
                      "description": "Allow clearing of selection"
                    },
                    "multiple": {
                      "type": "boolean",
                      "description": "Allow selection of multiple values",
                      "default": false
                    },
                    "ui": {
                      "type": "boolean",
                      "description": "Use stylised UI",
                      "default": true
                    },
                    "ajax": {
                      "type": "boolean",
                      "description": "Enable AJAX to lazy load choices",
                      "default": false
                    }
                  }
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "checkbox"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_required"
                },
                {
                  "$ref": "#/definitions/choices"
                },
                {
                  "properties": {
                    "default_value": {
                      "type": [
                        "string",
                        "array"
                      ],
                      "description": "Default value; if multiple values are allowed, you can provide array of default values."
                    },
                    "allow_custom": {
                      "type": "boolean",
                      "description": "Allow 'custom' values to be added"
                    },
                    "layout": {
                      "type": "string",
                      "description": "Layout arrangement for choices",
                      "enum": [
                        "horizontal",
                        "vertical"
                      ]
                    },
                    "toggle": {
                      "type": "boolean",
                      "description": "Prepend an extra checkbox to toggle all choices",
                      "default": false
                    }
                  }
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "radio"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_required"
                },
                {
                  "$ref": "#/definitions/choices"
                },
                {
                  "properties": {
                    "default_value": {
                      "type": "string",
                      "description": "Default selected value when creating a new post."
                    },
                    "other_choice": {
                      "type": "boolean",
                      "description": "Add 'other' choice to allow for custom values"
                    },
                    "layout": {
                      "type": "string",
                      "description": "Layout arrangement for choices",
                      "enum": [
                        "horizontal",
                        "vertical"
                      ]
                    }
                  }
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "button_group"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_required"
                },
                {
                  "$ref": "#/definitions/choices"
                },
                {
                  "properties": {
                    "default_value": {
                      "type": "string",
                      "description": "Default selected value when creating a new post."
                    },
                    "allow_null": {
                      "type": "boolean",
                      "description": "Allow empty value"
                    },
                    "layout": {
                      "type": "string",
                      "description": "Layout arrangement for choices",
                      "enum": [
                        "horizontal",
                        "vertical"
                      ]
                    }
                  }
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "true_false"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_required"
                },
                {
                  "properties": {
                    "default_value": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "description": "Displays text alongside the checkbox / switch"
                    },
                    "ui": {
                      "type": "boolean",
                      "description": "Use stylised UI",
                      "deafult": true
                    }
                  }
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "link"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_required"
                },
                {
                  "properties": {
                    "return_format": {
                      "type": "string",
                      "enum": [
                        "array",
                        "url"
                      ],
                      "default": "array"
                    }
                  }
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "post_object"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_required"
                },
                {
                  "$ref": "#/definitions/relational"
                },
                {
                  "properties": {
                    "return_format": {
                      "type": "string",
                      "enum": [
                        "object",
                        "id"
                      ]
                    },
                    "multiple": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "page_link"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_required"
                },
                {
                  "$ref": "#/definitions/relational"
                },
                {
                  "properties": {
                    "allow_null": {
                      "type": "boolean",
                      "default": false,
                      "description": "Allow empty value."
                    },
                    "allow_archives": {
                      "type": "boolean",
                      "default": false,
                      "description": "Allow selection of archive pages."
                    },
                    "multiple": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "relationship"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_required"
                },
                {
                  "$ref": "#/definitions/relational"
                },
                {
                  "properties": {
                    "return_format": {
                      "type": "string",
                      "enum": [
                        "object",
                        "id"
                      ]
                    },
                    "filters": {
                      "type": "array",
                      "examples": [
                        "search",
                        "post_type",
                        "taxonomy"
                      ],
                      "description": "Additional filtering tools when editing this field."
                    },
                    "elements": {
                      "type": "array",
                      "examples": [
                        "featured_image"
                      ],
                      "description": "Selected elements will be displayed in each result."
                    },
                    "min": {
                      "type": "integer",
                      "description": "Minimum number of posts."
                    },
                    "max": {
                      "type": "integer",
                      "description": "Maximum number of posts."
                    }
                  }
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "taxonomy"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_required"
                },
                {
                  "properties": {
                    "taxonomy": {
                      "type": "string",
                      "description": "Specify the taxonomy to be displayed.",
                      "examples": [
                        "category",
                        "post_tag",
                        "post_format"
                      ]
                    },
                    "field_type": {
                      "type": "string",
                      "description": "Specify the appearance of this field.",
                      "enum": [
                        "checkbox",
                        "multi_select",
                        "radio",
                        "select"
                      ]
                    },
                    "return_format": {
                      "type": "string",
                      "enum": [
                        "object",
                        "id"
                      ]
                    },
                    "allow_null": {
                      "type": "boolean",
                      "description": "Whether or not to allow empty value. Ignored with `field_type` is 'checkbox'"
                    },
                    "add_term": {
                      "type": "boolean",
                      "description": "Allow new terms to be created whilst editing."
                    },
                    "save_terms": {
                      "type": "boolean",
                      "description": "Connect selected terms to the post."
                    },
                    "load_terms": {
                      "type": "boolean",
                      "description": "Load value from posts terms."
                    }
                  },
                  "required": [
                    "taxonomy"
                  ]
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "user"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_required"
                },
                {
                  "properties": {
                    "role": {
                      "type": "array",
                      "examples": [
                        "'administrator'",
                        "'author'",
                        "'contributor'",
                        "'subscriber'",
                        "'editor'"
                      ],
                      "description": "Limit selection to specific user roles. Use empty array to allow all users to be selected."
                    },
                    "return_format": {
                      "type": "string",
                      "enum": [
                        "array",
                        "object",
                        "id"
                      ]
                    },
                    "allow_null": {
                      "type": "boolean",
                      "description": "Whether or not to allow empty value."
                    },
                    "multiple": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "google_map"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_required"
                },
                {
                  "properties": {
                    "center_lat": {
                      "type": "number",
                      "description": "Default center latitude position"
                    },
                    "center_lng": {
                      "type": "number",
                      "description": "Default center longitude position"
                    },
                    "zoom": {
                      "type": "integer",
                      "description": "Default zoom level",
                      "default": 14
                    },
                    "height": {
                      "type": "number",
                      "description": "Customise map height",
                      "default": 400
                    }
                  }
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "date_picker"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_required"
                },
                {
                  "properties": {
                    "display_format": {
                      "type": "string",
                      "default": "d/m/Y",
                      "description": "The format displayed when editing a post. Use PHP `date()` formatting rule."
                    },
                    "return_format": {
                      "type": "string",
                      "default": "d/m/Y",
                      "description": "The format returned via template functions. Use PHP `date()` formatting rule."
                    },
                    "first_day": {
                      "type": "integer",
                      "description": "Day that the week starts from. Provide value from 0 (Sunday) to 6 (Saturday)",
                      "default": 1,
                      "minimum": 0,
                      "maximum": 6
                    }
                  }
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "date_time_picker"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_required"
                },
                {
                  "properties": {
                    "display_format": {
                      "type": "string",
                      "default": "d/m/Y g:i a",
                      "description": "The format displayed when editing a post. Use PHP `date()` formatting rule."
                    },
                    "return_format": {
                      "type": "string",
                      "default": "d/m/Y g:i a",
                      "description": "The format returned via template functions. Use PHP `date()` formatting rule."
                    },
                    "first_day": {
                      "type": "integer",
                      "description": "Day that the week starts from. Provide value from 0 (Sunday) to 6 (Saturday)",
                      "default": 1,
                      "minimum": 0,
                      "maximum": 6
                    }
                  }
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "time_picker"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_required"
                },
                {
                  "properties": {
                    "display_format": {
                      "type": "string",
                      "default": "g:i a",
                      "description": "The format displayed when editing a post. Use PHP `date()` formatting rule."
                    },
                    "return_format": {
                      "type": "string",
                      "default": "g:i a",
                      "description": "The format returned via template functions. Use PHP `date()` formatting rule."
                    }
                  }
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "color_picker"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_required"
                },
                {
                  "properties": {
                    "default_value": {
                      "type": "string",
                      "default": "#FFFFFF",
                      "description": "Set the initial color"
                    }
                  }
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "message"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "new_lines": {
                      "type": "string",
                      "description": "Controls how new lines are rendered.",
                      "examples": [
                        "'wpautop'",
                        "'br'",
                        "''"
                      ]
                    },
                    "esc_html": {
                      "type": "boolean",
                      "default": false,
                      "description": "Allow HTML markup to display as visible text instead of rendering."
                    }
                  }
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "accordion"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "open": {
                      "type": "boolean",
                      "default": true,
                      "description": "Display this accordion as open on page load."
                    },
                    "multi_expand": {
                      "type": "boolean",
                      "default": true,
                      "description": "Allow this accordion to open without closing others."
                    },
                    "endpoint": {
                      "type": "boolean",
                      "default": false,
                      "description": "Define an endpoint for the previous accordion to stop. This accordion will not be visible."
                    }
                  }
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "tab"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "placement": {
                      "type": "string",
                      "enum": [
                        "top",
                        "left"
                      ],
                      "default": "top"
                    },
                    "endpoint": {
                      "type": "boolean",
                      "default": false,
                      "description": "Define an endpoint for the previous tabs to stop. This will start a new group of tabs."
                    }
                  }
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "group"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_required"
                },
                {
                  "properties": {
                    "layout": {
                      "type": "string",
                      "examples": [
                        "'block'",
                        "'table'",
                        "'row'"
                      ]
                    },
                    "sub_fields": {
                      "$ref": "#/definitions/fields"
                    }
                  },
                  "required": [
                    "layout",
                    "sub_fields"
                  ]
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "repeater"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_required"
                },
                {
                  "properties": {
                    "layout": {
                      "type": "string",
                      "examples": [
                        "'block'",
                        "'table'",
                        "'row'"
                      ]
                    },
                    "collapsed": {
                      "type": "string",
                      "description": "Specify sub field to show when row is collapsed."
                    },
                    "min": {
                      "type": "integer",
                      "description": "Minimum number of rows."
                    },
                    "max": {
                      "type": "integer",
                      "description": "Maximum number of rows."
                    },
                    "button_label": {
                      "type": "string",
                      "default": "Add Row"
                    },
                    "sub_fields": {
                      "$ref": "#/definitions/fields"
                    }
                  },
                  "required": [
                    "layout",
                    "sub_fields"
                  ]
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "flexible_content"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_required"
                },
                {
                  "properties": {
                    "min": {
                      "type": "integer",
                      "description": "Minimum number of layouts."
                    },
                    "max": {
                      "type": "integer",
                      "description": "Maximum number of layouts."
                    },
                    "button_label": {
                      "type": "string",
                      "default": "Add Row"
                    },
                    "layouts": {
                      "type": [
                        "array",
                        "object"
                      ],
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "display": {
                            "type": "string",
                            "examples": [
                              "'block'",
                              "'table'",
                              "'row'"
                            ]
                          },
                          "label": {
                            "type": "string"
                          },
                          "min": {
                            "type": "integer",
                            "description": "Minimum number of rows of this layout."
                          },
                          "max": {
                            "type": "integer",
                            "description": "Maximum number of rows of this layout."
                          },
                          "sub_fields": {
                            "$ref": "#/definitions/fields",
                            "description": "Specify fields to be added to this layout."
                          },
                          "required": [
                            "display",
                            "label",
                            "sub_fields"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "clone"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "$ref": "#/definitions/input_required"
                },
                {
                  "properties": {
                    "clone": {
                      "type": "array",
                      "description": "Specify field names to be cloned."
                    },
                    "display": {
                      "type": "string",
                      "description": "Specify the style used to render the clone field.",
                      "enum": [
                        "group",
                        "seamless"
                      ]
                    },
                    "prefix_label": {
                      "type": "boolean",
                      "description": "Prefix field label.",
                      "default": false
                    },
                    "prefix_name": {
                      "type": "boolean",
                      "description": "Prefix field name.",
                      "default": false
                    }
                  },
                  "required": [
                    "clone",
                    "display"
                  ]
                }
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "blueprint"
                }
              }
            },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "excludes": {
                      "type": "array",
                      "description": "Specify fields to be excluded (NOT copied)."
                    },
                    "only": {
                      "type": "array",
                      "description": "Only fields listed here will be copied."
                    },
                    "layout": {
                      "type": "array",
                      "description": "Layout configuration, allowing you to re-order and set the wrapper width, e.g. 'heading@50'."
                    },
                    "source": {
                      "type": "string",
                      "default": "The name of blueprint to be used. This is generally the name of the blueprint file without the extension, e.g. \"banner\""
                    },
                    "merge": {
                      "$ref": "#/definitions/fields"
                    }
                  },
                  "required": [
                    "source"
                  ]
                }
              ]
            }
          }
        ],
        "additionalProperties": true
      }
    },
    "input_default": {
      "type": "object",
      "properties": {
        "default_value": {
          "description": "Appears when creating a new post"
        }
      }
    },
    "input_required": {
      "type": "object",
      "properties": {
        "required": {
          "description": "Whether or not this field is required (has to be filled in)",
          "type": "boolean"
        }
      }
    },
    "input_placeholder": {
      "type": "object",
      "properties": {
        "placeholder": {
          "type": "string",
          "description": "Appears within the input"
        }
      }
    },
    "input_prepend_append": {
      "properties": {
        "prepend": {
          "type": "string",
          "description": "Appears before the input"
        },
        "append": {
          "type": "string",
          "description": "Appears after the input"
        }
      }
    },
    "file_default": {
      "type": "object",
      "properties": {
        "return_format": {
          "type": "string",
          "examples": [
            "array",
            "url",
            "id"
          ]
        },
        "library": {
          "type": "string",
          "examples": [
            "'all'",
            "'uploadedTo'"
          ],
          "description": "Limit the media library choice"
        },
        "min_size": {
          "type": "number",
          "description": "Minimum allowed size in MB"
        },
        "max_size": {
          "type": "number",
          "description": "Maximum allowed size in MB"
        },
        "file_mime": {
          "type": "object",
          "properties": {
            "mime_types": {
              "type": "string",
              "description": "Comma separated list. Omit this property to allow all types."
            }
          }
        }
      }
    },
    "file_image": {
      "type": "object",
      "properties": {
        "preview_size": {
          "type": "string",
          "examples": [
            "'thumbnail'",
            "'medium'",
            "'large'",
            "'full'"
          ]
        },
        "min_width": {
          "type": "number",
          "description": "Minimum allowed size in pixels"
        },
        "min_height": {
          "type": "number",
          "description": "Minimum allowed size in pixels"
        },
        "max_width": {
          "type": "number",
          "description": "Maximum allowed size in pixels"
        },
        "max_height": {
          "type": "number",
          "description": "Maximum allowed size in pixels"
        }
      }
    },
    "choices": {
      "type": "object",
      "properties": {
        "choices": {
          "type": [
            "object",
            "array"
          ],
          "description": "Array of choices. For more control, you can define key value pairs object."
        },
        "return_format": {
          "type": "string",
          "enum": [
            "value",
            "label",
            "array"
          ],
          "description": "Specify the value returned"
        }
      }
    },
    "relational": {
      "type": "object",
      "properties": {
        "post_type": {
          "type": "array",
          "description": "Limit selection to specific post types. Use empty array to allow all post types.",
          "examples": [
            "post",
            "page"
          ]
        },
        "taxonomy": {
          "type": "array",
          "description": "Limit selection to specific posts of specific taxonomies. Use {tax_term}:{tax_value} format: e.g. 'category:art', or empty array to allow all.",
          "examples": [
            "category"
          ]
        }
      }
    }
  },
  "properties": {
    "title": {
      "type": "string",
      "description": "Title of your ACF field, this appears in Wordpress metabox"
    },
    "key": {
      "description": "Globally unique key. This same key is used to prefix all fields within this field group.",
      "type": "string",
      "pattern": "^[a-z0-9-_]+$"
    },
    "menu_order": {
      "description": "Field groups with a lower order will appear first",
      "pattern": "^[0-9]+$"
    },
    "position": {
      "description": "Position of custom fields",
      "enum": [
        "acf_after_title",
        "normal",
        "side"
      ]
    },
    "style": {
      "description": "Display style",
      "enum": [
        "default",
        "seamless"
      ]
    },
    "label_placement": {
      "description": "Location of field label",
      "enum": [
        "top",
        "left"
      ]
    },
    "instruction_placement": {
      "description": "Location of instruction fields",
      "enum": [
        "label",
        "field"
      ]
    },
    "active": {
      "description": "Boolean flag to enable/disable this field group",
      "type": "boolean"
    },
    "hide_on_screen": {
      "description": "Items to be hidden from the edit screen. If multiple field groups appear on an edit screen, the first field group's options will be used (the one with the lowest order number)",
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "permalink",
          "the_content",
          "excerpt",
          "discussion",
          "comments",
          "revisions",
          "slug",
          "author",
          "format",
          "page_attributes",
          "featured_image",
          "categories",
          "tags",
          "send-trackbacks"
        ]
      },
      "additionalItems": {
        "type": "string"
      }
    },
    "location": {
      "description": "Location of this field. You may set this null to hide this field.",
      "type": [
        "null",
        "array"
      ],
      "pattern": "^[a-z0-9-_]+$",
      "defaultSnippets": [
        {
          "label": "Location",
          "description": "Create location option",
          "body": "location:\n\t-\n\t\t-\n\t\t\tparam: '${1}'\n\t\t\toperator: '=='\n\t\t\tvalue: '${2}'"
        }
      ],
      "items": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "param": {
              "type": "string",
              "description": "The location type to be tested. e.g. 'post_type'",
              "enum": [
                "post_type",
                "post_template",
                "post_status",
                "post_format",
                "post_category",
                "post_taxonomy",
                "post",
                "page_template",
                "page_type",
                "page_parent",
                "page",
                "current_user",
                "current_user_role",
                "user_form",
                "user_role",
                "taxonomy",
                "attachment",
                "comment",
                "widget",
                "nav_menu",
                "nav_menu_item",
                "block",
                "options_page"
              ]
            },
            "operator": {
              "type": "string",
              "description": "Choose logical operator used for comparison, for example '==' or '!='",
              "enum": [
                "==",
                "!="
              ]
            },
            "value": {
              "type": "string",
              "description": "The location value to be tested. e.g. 'post'"
            }
          }
        }
      }
    },
    "fields": {
      "$ref": "#/definitions/fields"
    }
  }
}